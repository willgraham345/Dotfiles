{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// ROS2 stuff
	"ROS2: Launch Configuration": {
		"prefix": "ros2_launch_configuration",
		"body": [
			"${1:name}_arg = DeclareLaunchArgument(",
			"\t'${1}',"
			"\tdefault_value=\"${2:value}\","
			"\tdescription=\"${3:description}\""
			")",
			"${1:name} = LaunchConfiguration(\"${1:name}\")",
			"$0"
		],
		"description": "Insert a ROS2 launch configuration snippet"
	},
	"ROS2: Launch Transformer":{
		"prefix": "ros2_launch_transformer RPY",
		"body": [
			"${1:node_name}_transformer = Node(",
			"\tpackage=\"tf2_ros\",",
			"\texecutable=\"static_transform_publisher\",",
			"\toutput=\"screen\",",
			"\t\targuments=[",
			"\t\t\t${2:x},",
			"\t\t\t${3:y},",
			"\t\t\t${4:z},",
			"\t\t\t${5:roll},",
			"\t\t\t${6:pitch},",
			"\t\t\t${7:yaw},",
			"\t\t\t\"${8:from_frame}\", \"${9:to_frame}\",",
			"\t\t]",
			")${0}"
		]
	},
	"ROS2: Launch Transformer Quat":{
		"prefix": "ros2_launch_transformer Quat",
		"body": [
			"${1:node_name}_transformer = Node(",
			"\tpackage=\"tf2_ros\",",
			"\texecutable=\"static_transform_publisher\",",
			"\toutput=\"screen\",",
			"\t\targuments=[",
			"\t\t\t${2:x},",
			"\t\t\t${3:y},",
			"\t\t\t${4:z},",
			"\t\t\t${5:qw},",
			"\t\t\t${6:qx},",
			"\t\t\t${7:qy},",
			"\t\t\t${8:qz},",
			"\t\t\t\"${9:from_frame}\", \"${10:to_frame}\",",
			"\t\t]",
			")${0}"
		]
	},
	"Output to console": {
		"prefix": "print",
		"body": [
			"print(f\"${1:output} = {${1:output}}\")$0"
		],
		"description": "Output to console"
	},
	// Python stuff
	"For Loop": {
		"prefix": "for loop",
		"body": [
			"for ${1:item} in ${2:items}:",
			"\t$0"
		],
		"description": "For Loop"
	},
	"Enumerate Loop": {
		"prefix": "enumerate loop",
		"body": [
			"for ${1:index}, ${2:item} in enumerate(${3:items}):",
			"\t$0"
		],
		"description": "Enumerate Loop"
	},
	"While Loop": {
		"prefix": "while loop",
		"body": [
			"while ${1:condition}:",
			"\t$0"
		],
		"description": "While Loop"
	},
	"Define Function": {
		"prefix": "def",
		"body": [
			"def ${1:function_name}(${2:arguments}):",
			"\t$0"
		],
		"description": "Define Function"
	},
	"Class": {
		"prefix": "class",
		"body": [
			"class ${1:ClassName}:",
			"\tdef __init__(self, ${2:arguments}):",
			"\t\t$0"
		],
		"description": "Class"
	},
	"Class Method": {
		"prefix": "class method",
		"body": [
			"\tdef ${1:method_name}(self, ${2:arguments}):",
			"\t\t$0"
		],
		"description": "Class Method"
	},
}